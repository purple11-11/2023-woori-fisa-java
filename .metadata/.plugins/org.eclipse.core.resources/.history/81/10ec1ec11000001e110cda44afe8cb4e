package game;

import java.util.ArrayList;
import java.util.Scanner;

import common.ActiveModerator;
import common.Block;
import common.CalmModerator;
import common.Moderator;
import common.Person;
import common.Player;

public class Game {
	private Player player1 = new Player();
	private Player player2 = new Player();
	private Moderator moderator;
	private Block block;
	
	public void startGame() {
		System.out.print("고슬링 게임에 오신 것을 환영합니다.");
		enterPlayer();
		selectModerator();
		moderator.guideStart(player1.getName(), player2.getName());
		playGame();
	}
	
	public void playGame() {
		ArrayList<Integer> blackHole = block.getBlackHole();
		boolean isPlayer1Turn = true;
		
		firstTurn(blackHole);
		pickOne(blackHole);
		
		boolean gameFlag = true;
		while(gameFlag) {
			boolean conFlag = true;
			if (isPlayer1Turn) {
				while (conFlag) {
					if (guess(player1, player2)) {
						correct();
					} else {
						wrong();
						conFlag = !conFlag;
					}
				}
			} else {
				while (conFlag) {
					if (guess(player2, player1)) {
						correct();
					} else {
						wrong();
						conFlag = !conFlag;
					}
				}
			}
			isPlayer1Turn = !isPlayer1Turn;
		}
		
	}
	
	public void endGame() {
		
	}
	
	public void enterPlayer() {
		Scanner scanner = new Scanner(System.in);
		System.out.println("플레이어1의 이름을 입력해주세요 : ");
		String name1 = scanner.next();
		System.out.println("플레이어2의 이름을 입력해주세요 : ");
		String name2 = scanner.next();
		player1 = new Player(name1);
		player2 = new Player(name2);
	}
	
	public void selectModerator() {
		Scanner scanner = new Scanner(System.in);
		System.out.println("취향에 맞는 사회자를 골라주세요");
		System.out.println("활기찬 사회자는를 원하시면 1을, 차분한 사회자를 원하시면 2를 눌러주세요");
		int modNum = scanner.nextInt();
		if (modNum == 1) {
			moderator = new ActiveModerator();
		} else {
			moderator = new CalmModerator();
		}
	}
	
	public void firstTurn(ArrayList<Integer> blackHole) {
		block = new Block();
		player1.pickFirst(blackHole);
		player2.pickFirst(blackHole);
	}
	
	public void pickOne(ArrayList<Integer> blackHole) {
		player1.pickOne(blackHole);
		player2.pickOne(blackHole);
	}
	
	public boolean guess(Player attacker, Player defender) {
		Scanner scanner = new Scanner(System.in);
		int selectIndex = scanner.nextInt();
		int selectNum = scanner.nextInt();
		
		boolean result = moderator.judge(defender.getBlocks(), selectIndex, selectNum);
		return result;
	}
	
	public void correct() {
		openOpponentBlock();
		stopOrGoing();
	}
	public void openOpponentBlock() {
		
	}
	public void stopOrGoing() {
		
	}
	public void wrong() {
		
	}
	public void openMineBlock() {
		
	}
	public void checkNotOpen() {
		
	}
	public void askContinue( ) {
		
	}
}